# Workflow untuk melakukan CI pipeline untuk dua branch: karsajobs (backend) dan karsajobs-ui (frontend)
name: CI Pipeline

on:
  push:
    branches:
      - karsajobs
      - karsajobs-ui
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Menjalankan job berdasarkan branch yang aktif
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Dockerfile with Hadolint
        run: |
          curl -LO https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x hadolint-Linux-x86_64

          # Tentukan path berdasarkan branch
          BRANCH_NAME="${GITHUB_REF##*/}"
          if [[ "$BRANCH_NAME" == "karsajobs" && -f "karsajobs/Dockerfile" ]]; then
            ./hadolint-Linux-x86_64 karsajobs/Dockerfile
          elif [[ "$BRANCH_NAME" == "karsajobs-ui" && -f "karsajobs-ui/Dockerfile" ]]; then
            ./hadolint-Linux-x86_64 karsajobs-ui/Dockerfile
          else
            echo "⚠️ Dockerfile not found, skipping lint step."
          fi

      - name: Run Go unit tests (only for karsajobs)
        if: contains(github.ref, 'karsajobs')
        working-directory: ./karsajobs
        run: |
          go version
          if [ -f "go.mod" ]; then
            go test -v -short --count=1 $(go list ./...)
          else
            echo "⚠️ go.mod not found, skipping tests."
          fi

      - name: Build and Push Docker Image
        run: |
          BRANCH="${GITHUB_REF##*/}"
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/$BRANCH"
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)

          if [ "$BRANCH" == "karsajobs" ] && [ -f "karsajobs/Dockerfile" ]; then
            docker build -t $IMAGE_NAME:$COMMIT_SHA ./karsajobs
            docker push $IMAGE_NAME:$COMMIT_SHA
          elif [ "$BRANCH" == "karsajobs-ui" ] && [ -f "karsajobs-ui/Dockerfile" ]; then
            docker build -t $IMAGE_NAME:$COMMIT_SHA ./karsajobs-ui
            docker push $IMAGE_NAME:$COMMIT_SHA
          else
            echo "⚠️ Dockerfile not found, skipping build & push."
          fi
